function read_CRF_norm_not_norm(cutoff,excludeSuppressed,plotErrorBars,roving)
%Written by Xing 8/6/13, modified from read_ROC_old_new
%To compare results generated by data that is normalised or not normalised
%to maximum firing rates of individual channels, or to level of spontaneous or ISI activity. 
%Performs comparison of values of 4 params calculated by
%bj_cumulatice_crf_diff.
analysisType='CRF';
plotDiffC50_30=0;
calculateTangent=1;
startEndTime='_1024_to_1536';
onExternalHD=0;
if onExternalHD==1
    rootFolder='G:\PL_backup_060413';
else
    rootFolder='F:';
end
paramTexts=[{'slope'} {'C50'} {'min'} {'max'}];
figGauss=figure('Color',[1,1,1],'Units','Normalized','Position',[0.1, 0.1, 0.45, 0.65]); %
set(figGauss, 'PaperUnits', 'centimeters', 'PaperType', 'A4', 'PaperOrientation', 'landscape', 'PaperPosition', [0.63452 3.305 3.325/0.4*0.45 3.305/5*65]);
animals=[{'blanco'} {'jack'}];
if roving==0
    areas=[{'v4_1'} {'v1_1'}];
    allTableStats=[];
    allParTableStats=[];
    mpallTableStats=[];
elseif roving==1
    areas=[{'v1_2_1'} {'v1_2_2'}];
    rovingCol=[0.5 0 0;0.75 0 0;1 0 0];
    rovingCol=[1 0 0;10/255 170/255 60/255;0 0 1];
    allTableStats=cell(1,3);
    allParTableStats=cell(1,3);
    mpallTableStats=cell(1,3);
end
for areaInd=1:length(areas)
    area=areas{areaInd};
    [sampleContrasts testContrasts]=area_metadata(area);
    for animalInd=1:length(animals)
        animal=animals{animalInd};
        for sampleContrastsInd=1:length(sampleContrasts)
            sampleContrast=sampleContrasts(sampleContrastsInd);
            testContrast=testContrasts(sampleContrastsInd,:);
            subFolder='crf_meanchannels';
            loadText=['load ',rootFolder,'\PL\',analysisType,'\',animal,'\',subFolder,'\cumulative_CRFs_old_new_',area,'_',subFolder,'_cutoff',num2str(cutoff*10),'.mat'];
            loadText=['load ',rootFolder,'\PL\',analysisType,'\',animal,'\',subFolder,'\cumulative_CRFs_old_new_',area,'_',num2str(sampleContrast),'_cutoff',num2str(cutoff*10),'.mat'];
            eval(loadText)%read non-normalised data
            oldValues=[slopeNeuroNew;PNENew;minRateNew;maxRateNew];%values calculated using trial-wise method ('new') but not normalised, so assigned to 'old' variable
            slopeNeuroOld=slopeNeuroNew;
            PNEOld=PNENew;
            minRateOld=minRateNew;
            maxRateOld=maxRateNew;
            oldAllMeanEpoch4AcrossTrials=allMeanEpoch4AcrossTrials;
        
%         subFolder=[subFolder,'_normISI'];
%         if normaliseCh
%             subFolder=[subFolder,'_normCh'];
%         end
%         if excludeSuppressed
%             subFolder=[subFolder,'_excludeSuppressed'];
%         end
            subFolder=[subFolder,'_normSpontan'];%read normalised data
            loadText=['load ',rootFolder,'\PL\',analysisType,'\',animal,'\',subFolder,'\cumulative_CRFs_old_new_',area,'_',subFolder,'_cutoff',num2str(cutoff*10),'.mat allMeanEpoch4AcrossTrials'];  
            loadText=['load ',rootFolder,'\PL\',analysisType,'\',animal,'\',subFolder,'\cumulative_CRFs_old_new_',area,'_',num2str(sampleContrast),'_cutoff',num2str(cutoff*10),'.mat allMeanEpoch4AcrossTrials'];
            eval(loadText)
            newValues=[slopeNeuroNew;PNENew;minRateNew;maxRateNew];%values calculated using trial-wise method

            %plot CRF values for each analysis type:
            figure('Color',[1,1,1],'Units','Normalized','Position',[0.1, 0.1, 0.8, 0.8]); %
    %         set(figROC, 'PaperUnits', 'centimeters', 'PaperType', 'A4', 'PaperOrientation', 'landscape', 'PaperPosition', [0.63452 0.63452 6.65 3.305]);
            setCol='br';
            for comparisonSet=1:2
                sessionCounter=1;
                for i=1:size(allMeanEpoch4AcrossTrials,1)
                    subplot(ceil(size(allMeanEpoch4AcrossTrials,1)/5),5,sessionCounter);
                    if comparisonSet==1
                        meanEpoch4AcrossTrials=oldAllMeanEpoch4AcrossTrials(i,2:end);
                    elseif comparisonSet==2
                        meanEpoch4AcrossTrials=allMeanEpoch4AcrossTrials(i,2:end);
                    end
                    if plotErrorBars==1
                        errorbar(testContrast,meanEpoch4AcrossTrials,stdEpoch4AcrossTrials,setCol(comparisonSet),'LineStyle','none');%errorbar(X,Y,E) plots Y versus X with symmetric error bars 2*E(i) long
                        hold on
                    end
                    plot(testContrast,meanEpoch4AcrossTrials,'Marker','o','Color',setCol(comparisonSet),'LineStyle','none');
                    hold on
                    xlim([0 max(testContrast)+10]);
                    if sessionCounter==10%||sessionCounter==11||sessionCounter==18
    %                                                 pause
                    end
                    [slopeNeuroNew,PNENew,diffPNENew,minRateNew,maxRateNew,chSSENew]=nr_fitting(meanEpoch4AcrossTrials,sampleContrast,testContrast,sessionCounter,slopeNeuroNew,chSSENew,PNENew,minRateNew,maxRateNew,diffPNENew,plotDiffC50_30,calculateTangent,startEndTime,animal,area);
                    if sessionCounter==1
                        xlabel('contrast (%)');
                        ylabel('firing rate (spikes/s)');
                    end
                    sessionCounter=sessionCounter+1;
                    title(num2str(i),'FontSize',16);
                end
            end
            imagename=[animal,'_',area,'_','_norm_notNormSpon_CRF_4_params_sessions_cutoff',num2str(cutoff*10)];
            if excludeSuppressed==1
                imagename=[animal,'_',area,'_','_norm_notNormSpon_CRF_4_params_sessions_cutoff',num2str(cutoff*10),'_excludeSuppressed'];
            end
            pathname=fullfile(rootFolder,'PL',analysisType,imagename);
            printtext=sprintf('print -dpng %s.png',pathname);
            set(gcf,'PaperPositionMode','auto')
            eval(printtext);       

            %compare non-normalised vs normalised values:
            figure(figGauss)                
            [hS,pS,ciS,statsS]=ttest(slopeNeuroNew,slopeNeuroOld)
            [hP,pP,ciP,statsP]=ttest(PNENew,PNEOld)
            [hmin,pmin,cimin,statsmin]=ttest(minRateNew,minRateOld)
            [hmax,pmax,cimax,statsmax]=ttest(maxRateNew,maxRateOld)
            dfs=[statsS.df statsP.df statsmin.df statsmax.df];
            tvals=[statsS.tstat statsP.tstat statsmin.tstat statsmax.tstat];
            pvals=[pS pP pmin pmax];
            for paramInd=1:4
                if roving==0
                    subplot(4,4,(paramInd-1)*4+animalInd+(areaInd-1)*2);
                    %calculate mean, SD for each parameter, for new & old methods:
                    tableStats(paramInd,1)=mean(oldValues(paramInd,:));
                    tableStats(paramInd,2)=std(oldValues(paramInd,:));
                    tableStats(paramInd,3)=mean(newValues(paramInd,:));
                    tableStats(paramInd,4)=std(newValues(paramInd,:));
                    %t-test stats for difference between old & new values:
                    tableStats(paramInd,5)=dfs(paramInd);
                    tableStats(paramInd,6)=tvals(paramInd);
                    tableStats(paramInd,7)=pvals(paramInd);
    %             plot(1:length(slopeNeuroNew),newValues(paramInd,:),'ro','LineStyle','none','MarkerFaceColor','r');hold on
    %             plot(1:length(slopeNeuroNew),oldValues(paramInd,:),'bo','LineStyle','none','MarkerFaceColor','b');
    %             plot(1:length(slopeNeuroNew),newValues(paramInd,:),'rx','LineStyle','none');hold on
    %             plot(1:length(slopeNeuroNew),oldValues(paramInd,:),'bx','LineStyle','none','MarkerSize',7);
    %             plot(1:length(slopeNeuroNew),oldValues(paramInd,:),'bx','LineStyle','none','MarkerSize',7);hold on
    %             plot(1:length(slopeNeuroNew),newValues(paramInd,:),'r+','LineStyle','none');
                    plot(1:length(slopeNeuroNew),newValues(paramInd,:),'ro','LineStyle','none');hold on
    %             plot(1:length(slopeNeuroNew),oldValues(paramInd,:),'rx','LineStyle','none','MarkerSize',7);%not normalised
    %             plot(1:length(slopeNeuroNew),newValues(paramInd,:),'ro','LineStyle','none');hold on
    %             plot(1:length(slopeNeuroNew),oldValues(paramInd,:),'bx','LineStyle','none','MarkerSize',7);
                elseif roving==1
                    subplot(4,4,(paramInd-1)*4+animalInd+(areaInd-1)*2);
                    plot(1:length(slopeNeuroNew),newValues(paramInd,:),'Marker','o','Color',rovingCol(sampleContrastsInd,:),'LineStyle','none');hold on
                end
                xlim([0 length(slopeNeuroNew)+1]);
                axis square
                if strcmp(animal,'blanco')&&strcmp(area,'v4_1')||strcmp(animal,'blanco')&&strcmp(area,'v1_2_1')&&sampleContrastsInd==1
                    ylabel(paramTexts(paramInd));
                    if paramInd==1
                        xlabel('session number');
                    end
                end
            end
            %calculate partial correlations for each parameter (based on new data only):
            [rho p]=partialcorr(slopeNeuroNew',(1:length(slopeNeuroNew))',[PNENew' minRateNew' maxRateNew'])
            parTableStats(1,8:10)=[length(slopeNeuroNew)-2 rho p];
            [rho p]=partialcorr(PNENew',(1:length(PNENew))',[slopeNeuroNew' minRateNew' maxRateNew'])
            parTableStats(2,8:10)=[length(PNENew)-2 rho p];
            [rho p]=partialcorr(minRateNew',(1:length(minRateNew))',[slopeNeuroNew' PNENew' maxRateNew'])
            parTableStats(3,8:10)=[length(minRateNew)-2 rho p];
            [rho p]=partialcorr(maxRateNew',(1:length(maxRateNew))',[slopeNeuroNew' PNENew' minRateNew'])
            parTableStats(4,8:10)=[length(maxRateNew)-2 rho p];
            allParTableStats{sampleContrastsInd}=[allParTableStats{sampleContrastsInd};parTableStats];
            %calculate regular correlations
            [rho p]=corr(slopeNeuroNew',(1:length(slopeNeuroNew))','type','Spearman')
            tableStats(1,8:10)=[length(slopeNeuroNew)-2 rho p];
            [rho p]=corr(PNENew',(1:length(PNENew))','type','Spearman')
            tableStats(2,8:10)=[length(PNENew)-2 rho p];
            [rho p]=corr(minRateNew',(1:length(minRateNew))','type','Spearman')
            tableStats(3,8:10)=[length(minRateNew)-2 rho p];
            [rho p]=corr(maxRateNew',(1:length(maxRateNew))','type','Spearman')
            tableStats(4,8:10)=[length(maxRateNew)-2 rho p];
            allTableStats{sampleContrastsInd}=[allTableStats{sampleContrastsInd};tableStats];    
            %calculate meaningful partial correlations
            [rho p]=partialcorr(slopeNeuroNew',(1:length(slopeNeuroNew))',[minRateNew' maxRateNew'])
            mptableStats(1,8:10)=[length(slopeNeuroNew)-2 rho p];
            [rho p]=partialcorr(PNENew',(1:length(PNENew))',[minRateNew' maxRateNew'])
            mptableStats(2,8:10)=[length(PNENew)-2 rho p];
            [rho p]=partialcorr(minRateNew',(1:length(minRateNew))',[slopeNeuroNew' maxRateNew'])
            mptableStats(3,8:10)=[length(minRateNew)-2 rho p];
            [rho p]=partialcorr(maxRateNew',(1:length(maxRateNew))',[slopeNeuroNew' minRateNew'])
            mptableStats(4,8:10)=[length(maxRateNew)-2 rho p];
            mpallTableStats{sampleContrastsInd}=[mpallTableStats{sampleContrastsInd};mptableStats];   
        %calculate most meaningful partial correlations (IMO)
%         [rho p]=partialcorr(slopeNeuroNew',(1:length(slopeNeuroNew))',[minRateNew' maxRateNew'])
%         mptableStats(1,8:10)=[length(slopeNeuroNew)-2 rho p];
%         [rho p]=partialcorr(PNENew',(1:length(PNENew))',[minRateNew' maxRateNew'])
%         mptableStats(2,8:10)=[length(PNENew)-2 rho p];
%         [rho p]=partialcorr(minRateNew',(1:length(minRateNew))',maxRateNew')
%         mptableStats(3,8:10)=[length(minRateNew)-2 rho p];
%         [rho p]=partialcorr(maxRateNew',(1:length(maxRateNew))',minRateNew')
%         mptableStats(4,8:10)=[length(maxRateNew)-2 rho p];
%         mpallTableStats=[mpallTableStats;mptableStats];      
        end
    end
end
subplot(4,4,1);
title('             monkey 1');
subplot(4,4,2);
title('             monkey 2');
subplot(4,4,3);
title('             monkey 1');
subplot(4,4,4);
title('             monkey 2');
%     subplot(4,4,1);
%     xlabel('contrast (%)');
%     ylabel('slope');
%     title('monkey 1');
%     subplot(4,4,2);
%     title('monkey 2');
%     subplot(4,4,3);
%     title('monkey 1');
%     subplot(4,4,4);
%     title('monkey 2');
%     subplot(4,4,5);
%     ylabel('PNE');
%     subplot(4,4,9);
%     ylabel('minimum');
%     subplot(4,4,13);
%     ylabel('maximum');
if roving==1
    subplot(4,4,1);
    ylim([0 0.012]);
    subplot(4,4,3);
    ylim([0 0.012]);
    subplot(4,4,5);
    ylim([20 70]);
    subplot(4,4,6);
    ylim([25 50]);
    subplot(4,4,7);
    ylim([10 60]);
    subplot(4,4,8);
    ylim([35 55]);
    subplot(4,4,9);
    ylim([5 18]);
    subplot(4,4,10);
    ylim([5 15]);
    subplot(4,4,11);
    ylim([8 15]);
    subplot(4,4,12);
    ylim([8 15]);
    subplot(4,4,15);
    ylim([0 25]);
    subplot(4,4,16);
    ylim([15 40]);
end
% subplot(4,4,3);
% ylim([0.0025 0.007]);
% subplot(4,4,4);
% ylim([0.011 0.019]);
% subplot(4,4,8);
% ylim([33 40]);
% subplot(4,4,9);
% ylim([-0.4 0.4]);
% subplot(4,4,10);
% ylim([-0.2 0.5]);
% subplot(4,4,11);
% ylim([-0.2 0.4]);
% subplot(4,4,13);
% ylim([0.2 1]);
% subplot(4,4,14);
% ylim([0.2 0.8]);
% subplot(4,4,16);
% ylim([0.78 1]);
% %ignore outliers:
% subplot(4,4,9);
% ylim([0.05 0.4]);
% subplot(4,4,10);
% ylim([0.25 0.45]);
% subplot(4,4,13);
% ylim([0.2 0.6]);
% subplot(4,4,14);
% ylim([0.2 0.5]);
imagename=['bj_old_new_ROC_4_params_sessions_cutoff',num2str(cutoff*10)];
if excludeSuppressed==1
    imagename=['bj_old_new_ROC_4_params_sessions_cutoff',num2str(cutoff*10),'_excludeSuppressed'];
end
if roving==1
    imagename=[imagename,'_roving'];
end
pathname=fullfile(rootFolder,'PL','ROC',imagename);
printtext=sprintf('print -dpng %s.png',pathname);
set(gcf,'PaperPositionMode','auto')
% eval(printtext);
cutoff
allTableStats