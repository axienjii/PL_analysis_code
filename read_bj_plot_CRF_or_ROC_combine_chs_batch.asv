function read_bj_plot_CRF_or_ROC_combine_chs_batch(analysisType)
%Written on 07/03/13. Calculates mean CRF values across channels.

test_epochs={0 529 529*2 529*3};durSpon=150;
epochNames={'spontaneous' 'sample' 'ISI' 'test'};
areas=[{'v4_1'} {'v1_1'}];
animals=[{'blanco'} {'jack'}];
plotFig=1;
colTexts='ymcrgbk';
markerTexts='+x';
markerSizes=[5 6];
calculateTangent=1;
plotDiffC50_30=1;
writeCoefs=1;
if strcmp(analysisType,'ROC')
    excludeSessHighSSE=1;
    excludeOutliers=1;
    slSigmaMultiple=3;
    c50SigmaMultiple=3;
else
    excludeSessHighSSE=0;
    excludeOutliers=0;
    slSigmaMultiple=0;
    c50SigmaMultiple=0;
end
for animalInd=1:2
    for areaInd=1:2
        animal=animals{animalInd};
        area=areas{areaInd};
        sessions=main_raw_sessions_final(animal,area);
        if strcmp(animal,'jack')
            if strcmp(area,'v4_1')
                testContrasts=[10 15 20 25 27 28 29 31 32 33 35 40 50 60];
                sampleContrasts=30;
            elseif strcmp(area,'v1_1')
                testContrasts=[5 10 15 20 22 25 28 32 35 40 45 50 60 90];
                sampleContrasts=30;
            elseif strcmp(area,'v1_2')
                testContrasts=[5 10 12 15 18 22 25 28 35 45 63 90;5 10 15 22 25 28 32 35 38 45 60 90;5 10 15 25 32 35 38 42 45 50 60 90];
                sampleContrasts=[20 30 40];
            end
        elseif strcmp(animal,'blanco')
            if strcmp(area,'v4_1')
                testContrasts=[10 15 20 25 27 28 29 31 32 33 35 40 50 60];
                sampleContrasts=30;
            elseif strcmp(area,'v1_1')
                testContrasts=[5 10 15 20 22 25 28 32 35 40 45 50 60 90];
                sampleContrasts=30;
            elseif strcmp(area,'v1_2')
                testContrasts=[5 10 12 15 18 22 25 28 35 45 63 90;5 10 15 22 25 28 32 35 38 45 60 90;5 10 15 25 32 35 38 42 45 50 60 90];
                sampleContrasts=[20 30 40];
            end
        end  
        channels = main_channels(animal,area);
        for j=1:length(sampleContrasts)
            sampleContrast=sampleContrasts(j);
            appendText=['_',num2str(sampleContrast)];
            testContrast=testContrasts(j,:);
            figure('Color',[1,1,1],'Units','Normalized','Position',[0.12, 0.08, 0.8, 0.8]);
            for epoch=1:size(test_epochs,2)
                if strcmp(analysisType,'CRF')||strcmp(analysisType,'ROC')&&epoch==4
                    epochTitle=epochNames{epoch};
                    if epoch==1
                        periods=[-durSpon 0];
                    else
                        periods=[test_epochs{epoch-1} test_epochs{epoch}(1)];
                    end
                    for subPeriod=1:length(periods)-1
                        startEndTime=['_',num2str(periods(subPeriod)),'_to_',num2str(periods(subPeriod+1))];
                        periodTitle=[epochTitle,' (',num2str(periods(subPeriod)),' to ',num2str(periods(subPeriod+1)),' ms)'];
                        clearText=['clear all',analysisType,'vals'];
                        eval(clearText)
                        [allValsTemp{1,1:length(sessions)}] = deal(zeros(1));
                        for i=1:length(channels)
                            startEndTime=['_',num2str(periods(subPeriod)),'_to_',num2str(periods(subPeriod+1))];
                            matName=[analysisType,'_Ch',num2str(channels(i)),'_',num2str(sampleContrast),startEndTime,'.mat'];
                            matPath=fullfile('F:','PL',analysisType,animal,area,matName);
                            loadText=['load ',matPath,' ',analysisType,'mat'];
                            eval(loadText);
                            if strcmp(analysisType,'CRF')
                                dataArray=CRFmat;
                            elseif strcmp(analysisType,'ROC')
                                dataArray=ROCmat;
                            end
                            for rowInd=1:size(dataArray,1)
                                allValsTemp{rowInd}=allValsTemp{rowInd}+dataArray{rowInd,3};
                            end
                        end
                        sessionSorted1=[];
                        for rowInd=1:size(dataArray,1)
                            allValsTemp{rowInd}=allValsTemp{rowInd}/length(channels);
                            sessionSorted1=[sessionSorted1 dataArray{rowInd,1}];
                        end
                        allDataVals=dataArray;%simply copy the first two columns from the last mat array that happened to be loaded, as the info in the first 2 columns are identical across files
                        for rowInd=1:size(dataArray,1)
                            allDataVals{rowInd,3}=allValsTemp{rowInd};
                        end
                        if strcmp(analysisType,'ROC')
                            allROCvals=allDataVals;
                        else
                            allCRFvals=allDataVals;
                        end
                        saveMatName=['mean_',animal,'_',area,'_',analysisType,'_across_chs',startEndTime];
                        saveMatFolder=fullfile('F:','PL',analysisType,animal);
                        saveMatPath=fullfile(saveMatFolder,saveMatName);
                        saveText=['save ',saveMatPath,'.mat all',analysisType,'vals'];
                        eval(saveText)
                        slC50Matname=['mean_',animal,'_',area,'_',analysisType,'_across_chs',appendText,startEndTime,'_slC50'];
                        slC50MatFolder=fullfile('F:','PL',analysisType,animal,'slope_C50_mat');
                        slC50MatPathname=fullfile(slC50MatFolder,slC50Matname);
                        %proportion of trials monkey reported that test was higher contrast,
                        colmapText=colormap(jet(size(testContrast,2)));
                        colmapText=[colmapText(1,:);132/255 22/255 216/255;202/255 65/255 223/255;colmapText(3:7,:);157/255 212/255 61/255;colmapText(10:12,:);178/255 111/255 12/255;colmapText(end,:)];
                        subplot(2,2,epoch);
                        markerText=markerTexts(2);markerS=8;
                        for i=1:length(testContrast)
                            valPerCond=[];
                            for sessionInd=1:size(allDataVals,1)
                                valPerCond=[valPerCond allDataVals{sessionInd,3}(i)];
                            end
                            plot(1:size(allDataVals,1),valPerCond,'Color',colmapText(i,:),'LineStyle','none','Marker',markerText,'MarkerFaceColor',colmapText(i,:),'MarkerEdgeColor',colmapText(i,:),'MarkerSize',markerS);hold on%'MarkerFaceColor',[1/i 1/i 1/i],
                            hold on
                            %                         [chiseb1linear(i,:) chiseb1(i,:) coefperfb1linear(i,:) coefperfb1(i,:) aRSb1linear(i,:) aRSb1(i,:)]=linearexpo_fitting(1:size(allCRFvals,2),CRFperCond',i,1);
                            %     yLimVals=get(gca,'ylim');
                            %     xLimVals=get(gca,'xlim');
                            %     unitSpace=(yLimVals(2)-yLimVals(1))/30;
                        end
                        title(periodTitle);
                        xlabel('session');
                        if strcmp(analysisType,'ROC')
                        ylabel('ROC value');
                        else
                        ylabel('mean firing rate (spikes/s)');
                        end
                        saveMeanImageName=[area,'_',animal,'_4epochs_mean_',analysisType,'_across_channels_vs_session_',num2str(sampleContrast)];
                        saveMeanImageFolder=fullfile('F:','PL',analysisType,animal);
                        saveMeanImagePath=fullfile(saveMeanImageFolder,saveMeanImageName);
                        printtext=sprintf('print -dpng %s.png',saveMeanImagePath);
                        eval(printtext);
                        if strcmp(epochTitle,'test')
                            [slopeNeuro,c50,diffc50,minRate,maxRate,chSSE,yLim]=plot_CRF_or_ROC_across_sessions(animal,area,analysisType,allDataVals,'mean across channels',length(allDataVals),sessionSorted1,sampleContrast,testContrast,calculateTangent,plotDiffC50_30,excludeSessHighSSE,excludeOutliers,[],startEndTime,slC50MatPathname,slSigmaMultiple,c50SigmaMultiple);
                            %collate CRF parameter values across periods
                            example_ch_54=0;
                            figure('Color',[1,1,1],'Units','Normalized','Position',[0.12, 0.08, 0.8, 0.8]);
                            plot_neurometric_coefs(animal,area,[],appendText,startEndTime,slopeNeuro,c50,plotDiffC50_30,diffc50,minRate,maxRate,sessionSorted1,analysisType,example_ch_54,0,0,writeCoefs)
                        end
                        %                 saveCoefImagePath
                        %                     ylim([0 100]);
                        %                     legend('hide');
                        %                     xlabel('');
                        %                     ylabel('');
                        %                     pc_condcoefFig=figure('Color',[1,1,1],'Units','Normalized','Position',[0.12, 0.08, 0.8, 0.8]);
                        %                     subplot(2,2,1);
                        %                     [rperfcoeff(1:2) pperfcpef(1:2)]=plot_coef_expo_perf(coefperfb1,sampleContrast,testContrast,ind);
                        %
                        %                     %to check values of coefficients:
                        %                     figure;plot(1:14,coefperfb1(:,1));
                        %                     figure;plot(1:14,coefperfb1(:,2));
                        %                     figure;plot(1:14,coefperfb1(:,3));
                        %
                        %                     %to create test data for exp curve:
                        %                     xtest=1:14;
                        %                     figure
                        %                     for testind=1:14
                        %                         ytest(testind)=exp(-testind);
                        %                     end
                        %                     plot(xtest,ytest)
                        %                     figure
                        %                     for testind=1:14
                        %                         ytest(testind)=-exp(-testind);
                        %                     end
                        %                     plot(xtest,ytest)
                    end
                end
            end
        end
    end
    close all
end

