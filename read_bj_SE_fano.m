function read_bj_SE_fano(animal,area,channels,sessionNums)
%Written by Xing 16/09/10
%Set the minimum number of trials in this function with ‘mintrials,’ for
%data from a particular session to be included.
%Data in folder: PSTH_xcorr_sm6ms_min40trials_transform
%Transforms data (corr coef values) because the original coef values have a
%negatively (left) skewed distribution, and not possible to calculate CIs
%using non-normally-distributed data.
%Tried various types of transformations and tested for normality with
%lillietest function, also calculated skewness and kurtosis. Found that the
%square root transform does pretty well (after data have undergone a
%preliminary transformation to make them positively skewed), and reduces
%skewness substantially.
%Modified from read_blanco_SE_xcorr4 which performed analysis for each good
%session of each cell (read_blanco_SE_xcorr3 only did it for cell 8, session 359).
%Uses PSTH values as measure of spike activity, runs Xcorr over 2 main stages:
%1. On activity within sessions for each cell, to obtain measure of degree
%of within-session correlation.
%Generates full, 'original' correlation coef by performing corr analysis on
%pairwise comparisons between all trials from that session. Then generates
%numerous other corr coefs using bootstrapped data (~50 - 100 samples of
%half the number of total trials, with replacement). Identifies location of
%'original' corr coef data point within distribution of coefs generated
%from bootstrapped data samples.
%2. On activity across sessions for each cell, to obtain measure of degree
%of within-cell correlation. Performs pairwise comparison between PSTHs
%from 2 sessions at a time, e.g. for middle session vs every other session.
%Probably no need to repeat for all combinations of session pairs- just
%picking 1 session and comparing against the rest could be sufficient.
%Extra 3rd stage
%3. Performs pairings on activity across sessions AND across cells, to
%generate measure for between-cell variability, for comparison with
%within-cell-within-session variability of spike responses.
%Plots all bootstrapped PSTHs on single graph (in black) and original PSTH
%from complete non-repetitive set of trials in red. Saves image to file
%e.g. boot_8_359_PSTHs for cell 8 and session 359.
%Plots histogram of correlation coefficients generated by pairwise
%comparisons between bootstrapped data from 1 session. Saves this initial
%image to file, e.g. boot_8_359_PSTHc. On same graph, draws
%vertical dotted lines at values of x which corresponds to coefs calculated
%between pairs of real PSTH data- between sessions for that cell (in
%green), between cells for all sessions (in blue), and between cells for
%that session (in cyan). Saves image to file, e.g. fullrange_8_359_PSTHc.
%Then restricts range to that covered by values generated from
%within-cell-between-sessions
%analysis. Saves image to file, e.g. bSessrange_8_359_PSTHc.
%Writes values of coefs to file, cDist: 1. ch #, 2. session #, 3. coefs from
%bootstrapped  values for that session, coefs from comparisons between: 4.
%within-cell-between-sessions, 5. across cells across sessions, 6. across
%cells within session.
%Lastly, saves same sets of data to .mat array (just in case), allDist.mat.
%Data-writing convention follows that of text file, with ch # in 1st
%column, session # in 2nd, and the 4 arrays of coef values in 'cell' format
%in the 3rd to 6th columns. Data compiled across good sessions from top to
%bottom row of saved variable 'allDist.'

minusSpontan=0;
markerTexts='+x';
%combine PSTH activity values across channels and sessions:
if nargin<3 || isempty(channels)
    channels = main_channels(animal,area);
end
if nargin<4 || isempty(sessionNums)
    sessionNums = main_raw_sessions_final(animal,area,[],0);
end
[sampleContrasts allTestContrasts]=area_metadata(area);
epoch=4;
if minusSpontan==1
    subfolder=['fano',num2str(epoch),'_mspontan_',area];%folder for stimulus-evoked responses minus spontaneous activity levels
elseif minusSpontan==0
    subfolder=['fano',num2str(epoch),'_wspontan_',area];%folder for stimulus-evoked responses minus spontaneous activity levels
end
allFanoSessions=[];
colmapText=colormap(jet(size(allTestContrasts,2)));
colmapText=[colmapText(1,:);132/255 22/255 216/255;202/255 65/255 223/255;colmapText(3:7,:);157/255 212/255 61/255;colmapText(10:12,:);178/255 111/255 12/255;colmapText(end,:)];
for sampleContrastInd=1:length(sampleContrasts)%combine across sample contrasts (if >1) because highest test contrast is always the same (60% in V4, 90% in V1)
    sampleContrast=sampleContrasts(sampleContrastInd);
    figure('Color',[1,1,1],'Units', 'Normalized', 'Position',[0.05,0.05, 0.9, 0.9]);
    for i=1:length(channels)
        fanoSessions=[];
        for j=1:length(sessionNums)
            matFanoName=[num2str(channels(i)),'_',num2str(sessionNums(j)),'_',num2str(sampleContrast),'_',area,'_fano_vals.mat'];
            matFanoPath=fullfile('F:','PL','fano',animal,subfolder,matFanoName);
            if exist(matFanoPath,'file')
                loadText=['load ',matFanoPath,' fano_vals'];
                eval(loadText);
                fanoSessions=[fanoSessions;fano_vals];
                allFanoSessions=[allFanoSessions;channels(i) sessionNums(j) fano_vals];
            end
        end
        subplot(ceil(length(channels)/5),5,i);
        markerText=markerTexts(2);markerS=8;
        for cond=1:size(allTestContrasts,2)
            plot(1:length(fanoSessions),fanoSessions(:,cond),'Color',colmapText(cond,:),'LineStyle','none','Marker',markerText,'MarkerFaceColor',colmapText(cond,:),'MarkerEdgeColor',colmapText(cond,:),'MarkerSize',markerS);hold on%'MarkerFaceColor',[1/i 1/i 1/i],
            hold on
        end
        if strcmp(animal,'blanco')&&strcmp(area,'v1_2')
            ylim([0 3]);
        end
%         xlabel('session');
%         ylabel('Fano factor');
                title(num2str(channels(i)));
    end
    saveMeanImageName=[area,'_',animal,'_epoch',num2str(epoch),'_between_channels_vs_session_',num2str(sampleContrast)];
    saveMeanImageFolder=fullfile('F:','PL','fano',animal);
    saveMeanImagePath=fullfile(saveMeanImageFolder,saveMeanImageName);
    printtext=sprintf('print -dpng -r600 %s.png',saveMeanImagePath);
    set(gcf,'PaperPositionMode','auto')
    eval(printtext);
end

matGrandName=['fanoList_',area];
matGrandPath=fullfile('F:','PL','fano',animal,subfolder,matGrandName);
saveText=['save ',matGrandPath,' fanoSessions'];
eval(saveText);
close all

