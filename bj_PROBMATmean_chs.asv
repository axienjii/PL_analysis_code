function bj_PROBMATmean_chs(exampleFig,cutoff,animals,useISI,areas,excludeSuppressed,normalised)
%Written by Xing 25/08/13
%Set useISI to 1: based on pre-test vs test, not on sample vs test.
%Set useISI to 0: sample vs test.
%Calculate PROBMAT values for individual channels, then average across channels.
if useISI==1
    analysisType='ROC';
else
    analysisType='ROC_zero_one';
end
sglroc3IndividualChs=1;%set to 0 to read ROC values for individual channels and calculate mean ROC across channels; set to 1 to calculate ROCs based on pooled activity across channels
onExternalHD=0;
if onExternalHD==1
    rootFolder='G:\PL_backup_060413';
else
    rootFolder='F:';
end
plotDiffC50_30=1;
calculateTangent=1;
if nargin<3||isempty(animals)
    animals=[{'blanco'} {'jack'}];
    % animals={'blanco'};
end
if nargin<4||isempty(areas)
    areas=[{'v4_1'} {'v4_2'} {'v1_1'} {'v1_2'}];
    areas=[{'v4_1'} {'v1_1'} {'v1_2_1'} {'v1_2_2'} {'v1_2_3'}];
end
figROCconds=figure('Color',[1,1,1],'Units','Normalized','Position',[0.1, 0.1, 0.8, 0.8]); %
set(figROCconds, 'PaperUnits', 'centimeters', 'PaperType', 'A4', 'PaperOrientation', 'landscape', 'PaperPosition', [0.63452 0.63452 6.65 3.305]);
for animalInd=1:length(animals)
    animal=animals{animalInd};
    for areaInd=1:length(areas)
        area=areas{areaInd};
        [sampleContrasts testContrasts]=area_metadata(area);
        channels=main_channels(animal,area);
        sessionNums=main_raw_sessions_final(animal,area,[],0);
        if strcmp(animal,'jack')%%strcm
        for sampleContrastsInd=1:length(sampleContrasts)
            sampleContrast=sampleContrasts(sampleContrastsInd);
            testContrast=testContrasts(sampleContrastsInd,:); 
            %read in list of included channels
            if cutoff~=1
                matname=['good_SNR_',area,'_',num2str(sampleContrast),'_cutoff',num2str(cutoff*10),'.mat'];
                pathname=fullfile(rootFolder,'PL','SNR',animal,matname);
            else
                matname=['good_SNR_',area,'_',num2str(sampleContrast),'.mat'];
                pathname=fullfile(rootFolder,'PL','SNR',animal,'cutoff_SNR_1',matname);
            end
            loadText=['load ',pathname,' includeSessionsAll'];
            eval(loadText);
            if exampleFig==0
                figROC=figure('Color',[1,1,1],'Units','Normalized','Position',[0.1, 0.1, 0.8, 0.8]); %
                set(figROC, 'PaperUnits', 'centimeters', 'PaperType', 'A4', 'PaperOrientation', 'landscape', 'PaperPosition', [0.63452 0.63452 6.65 3.305]);
            end
            slopeNeuroNew=[];PNENew=[];diffPNENew=[];minRateNew=[];maxRateNew=[];chSSENew=[];
            slopeNeuroOld=[];PNEOld=[];diffPNEOld=[];minRateOld=[];maxRateOld=[];chSSEOld=[];
            meanPROBMAT=zeros(length(sessionNums),length(testContrast));%store mean PROBMAT values (averaged across channels) for each session
            for i=1:length(sessionNums)
                subplot(ceil(length(sessionNums)/5),5,i);
                sumROCmat=zeros(1,length(testContrast));%sum PROBMAT values across channels
                for chInd=1:length(channels)
                    loadText=['load F:\PL\ROC_zero_one\ROC\',animal,'\',area,'\ROC_Ch',num2str(channels(chInd)),'_',num2str(sampleContrast),'_1024_to_1536.mat'];
                    eval(loadText);
                    sumROCmat=sumROCmat+ROCmat{i,3};
                end
                meanPROBMAT(i,:)=sumROCmat/length(channels);%find mean across channels
                [slopeNeuroOld,PNEOld,diffPNEOld,minRateOld,maxRateOld,chSSEOld]=weibull_fitting(meanPROBMAT(i,:),sampleContrast,testContrast,'old',i,slopeNeuroOld,chSSEOld,PNEOld,minRateOld,maxRateOld,diffPNEOld,plotDiffC50_30,calculateTangent,useISI);
            end
            subFolder='PROBMATmeanchannels';
            if excludeSuppressed==1
                subFolder=[subFolder,'_excludeSuppressed'];
            end
            if normalised==1
                subFolder=[subFolder,'_normalised'];
            end
            saveText=['save ',rootFolder,'\PL\ROC_zero_one\ROC\',animal,'\',subFolder,'\cumulative_ROCs_old_new_',area,'_',num2str(sampleContrast),'_cutoff',num2str(cutoff*10),'.mat slopeNeuroOld PNEOld diffPNEOld minRateOld maxRateOld'];
            eval(saveText);
        end
    end
end
